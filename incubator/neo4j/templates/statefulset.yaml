apiVersion: "apps/v1beta1"
kind: StatefulSet
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  serviceName: {{ template "fullname" . }}
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      name: "{{ printf "%s-%s" .Release.Name .Values.Name | trunc 24 }}"
      labels:
        app: {{ template "fullname" . }}
        heritage: {{.Release.Service | quote }}
        release: {{.Release.Name | quote }}
        chart: "{{.Chart.Name}}-{{.Chart.Version}}"
        component: "{{.Release.Name}}-{{.Values.Component}}"
    spec:
      containers:
      - name: "{{ printf "%s-%s" .Release.Name .Values.Name | trunc 24 }}"
        image: "{{.Values.Image}}:{{.Values.ImageTag}}"
        imagePullPolicy: "{{.Values.ImagePullPolicy}}"
        ports:
        - containerPort: 7474
          name: web
        - containerPort: 7687
          name: bolt
        resources:
          limits:
            cpu: "{{.Values.resources.limits.cpu}}"
            memory: "{{.Values.resources.limits.memory}}"
          requests:
           cpu: "{{.Values.resources.requests.cpu}}"
           memory: "{{.Values.resources.requests.memory}}"
        env:
          - name: NEO4J_AUTH
            value: "{{.Values.neo4j.Neo4jAuth}}"

        # These volume mounts are persistent. They are like inline claims,
        # but not exactly because the names need to match exactly one of
        # the stateful pod volumes.
        volumeMounts:
        - name: neo4j-data
          mountPath: /neo4j_data
  # These are converted to volume claims by the controller
  # and mounted at the paths mentioned above.
  volumeClaimTemplates:
  {{- if .Values.persistence.enabled }}
  - metadata:
      name: neo4j-data
      annotations:
        {{- if .Values.persistence.storageClass }}
        volume.beta.kubernetes.io/storage-class: {{ .Values.persistence.storageClass }}
        {{- else }}
        volume.alpha.kubernetes.io/storage-class: default
        {{- end }}
    spec:
      accessModes: 
      - {{ .Values.persistence.accessMode | quote }}
      resources:
        requests:
          storage: {{ .Values.persistence.size | quote }}
 {{- end }}          
